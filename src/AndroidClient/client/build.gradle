apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

version = "1.0.9"
group = "net.servicestack"                                        // Maven Group ID for the artifact
String packageId = "client"

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

Properties properties = new Properties()
properties.load(project.file('./local.properties').newDataInputStream())

def siteUrl = 'https://github.com/ServiceStack/ServiceStack.Java'      // Homepage URL of the library
def gitUrl = 'https://github.com/ServiceStack/ServiceStack.Java.git'   // Git repository URL

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apiKey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        userOrg = 'servicestack'
        name = "ServiceStack.Client"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["BSD 3-Clause"]
        publish = true
    }
}

task makeJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('build/libs/')
    include('classes.jar')
    rename ('classes.jar', packageId + '-' + version + '.jar')
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'jar'

                // Add your description here
                name 'ServiceStack.Client'
                description 'A client library to call your ServiceStack webservices.'
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name 'The BSD 3-Clause License'
                        url 'https://raw.githubusercontent.com/ServiceStack/Assets/master/docs/license/LICENSE-BSD3.txt'
                    }
                }

                developers {
                    developer {
                        id 'mythz'
                        name 'Demis Bellot'
                        email 'team@servicestack.net'
                    }
                    developer {
                        id 'layoric'
                        name 'Darren Reid'
                        email 'team@servicestack.net'
                    }
                }
                scm {
                    connection 'https://github.com/ServiceStack/ServiceStack.Java'
                    developerConnection 'https://github.com/ServiceStack/ServiceStack.Java'
                    url 'https://github.com/ServiceStack/ServiceStack.Java'
                }
            }
        }
    }
}.dependsOn makeJar

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'org.json:org.json:chargebee-1.0'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task clearJar(type: Delete) {
    delete ("build/libs/" + packageId + '-' + version + '.jar')
}

artifacts {
    archives javadocJar
    archives sourcesJar
    archives file: new File('build/libs/' + packageId + '-' + version + '.jar'), name: packageId, type: 'jar'
}

task findConventions << {
    println project.getConvention()
}
